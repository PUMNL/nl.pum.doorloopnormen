<?php

require_once 'CRM/Core/Form.php';

/**
 * Form controller class
 *
 * @see http://wiki.civicrm.org/confluence/display/CRMDOC43/QuickForm+Reference
 */
class CRM_Doorloopnormen_Form_Doorloopnormen extends CRM_Core_Form {

  protected $norm;

  function preProcess() {
    $id = CRM_Utils_Request::retrieve('id', 'Integer', CRM_core_DAO::$_nullObject, TRUE);
    $params['id'] = $id;
    $normem = CRM_Doorloopnormen_BAO_Doorloopnormen::getValues($params);
    $this->norm = $normem[$id];
    parent::preProcess(); // TODO: Change the autogenerated stub
  }

  function setDefaultValues() {
    return $this->norm;
  }

  public function buildQuickForm() {
    $this->add('hidden', 'id', ts('Norm ID'));

    // add form elements
    $this->add(
      'text', // field type
      'name', // field name
      ts('Name'),
      array('disabled' => true, 'class' => 'huge'),
      FALSE
    );

    $this->add(
      'text', // field type
      'label', // field name
      ts('Label'),
      array('class' => 'huge'),
      TRUE
    );

    $this->add(
      'text', // field type
      'norm', // field name
      ts('Norm in days'),
      array(),
      TRUE
    );

    $this->addRule('norm', ts('Norm should be number in days'), 'integer');

    $this->addButtons(array(
      array('type' => 'next', 'name' => ts('Save'), 'isDefault' => TRUE,),
      array('type' => 'cancel', 'name' => ts('Cancel'))));

    // export form elements
    $this->assign('elementNames', $this->getRenderableElementNames());
    parent::buildQuickForm();
  }

  public function postProcess() {
    $values = $this->exportValues();
    $this->norm['label'] = $values['label'];
    $this->norm['norm'] = $values['norm'];
    CRM_Doorloopnormen_BAO_Doorloopnormen::add($this->norm);

    parent::postProcess();
  }


  /**
   * Get the fields/elements defined in this form.
   *
   * @return array (string)
   */
  public function getRenderableElementNames() {
    // The _elements list includes some items which should not be
    // auto-rendered in the loop -- such as "qfKey" and "buttons".  These
    // items don't have labels.  We'll identify renderable by filtering on
    // the 'label'.
    $elementNames = array();
    foreach ($this->_elements as $element) {
      /** @var HTML_QuickForm_Element $element */
      $label = $element->getLabel();
      if (!empty($label)) {
        $elementNames[] = $element->getName();
      }
    }
    return $elementNames;
  }
}
